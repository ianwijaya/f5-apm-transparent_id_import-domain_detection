when HTTP_REQUEST {
    if { [HTTP::method] eq "POST" } {
          ## Trigger the collection for up to 1MB of data
          if { [HTTP::header Content-Length] ne "" and [HTTP::header value Content-Length] <= 1048576 } {
             set content_length [HTTP::header value Content-Length]
          } else {
             set content_length 1048576
          }
          ## Check if $content-length is not set to 0
          if { $content_length > 0 } {
             HTTP::collect $content_length
          }
       }
}

when HTTP_REQUEST_DATA {
   log local0. [HTTP::payload]
   set delData [findstr [HTTP::payload] "<delete" 0 "delete>"]
   set newData [findstr [HTTP::payload] "<update" 0 "metadata>"]
   set username [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $newData "identity" ] "name=" 5 " "]]
   set addr [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $newData "ip-address"] "value=" 6 " "]]
   set domain [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $newData "identity"] "administrative-domain=" 23 " "]]
   set del_username [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $delData "identity" ] "name=" 5 " "]]
   set del_addr [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $delData "ip-address"] "value=" 6 " "]]
   #set del_domain [string map {"\"" "" " " "" "\'" ""} [findstr [findstr $delData "administrative-domain" ] "name=" 5 " "]]
   log local0. "proxy -> $username $addr $domain"

    if { $del_username!="" && $del_addr!="" } {
         if { [table lookup $del_addr]!=""} {
                log local0. "DELETE USER VIP $del_username:$del_addr"
                table delete  $del_username:$del_addr
      }
    }

    if { $username!="" && $addr!="" } {
            log local0. "USER $username:$addr"
            table set  "$username:$addr" $domain 172800 indef 
    }

}
